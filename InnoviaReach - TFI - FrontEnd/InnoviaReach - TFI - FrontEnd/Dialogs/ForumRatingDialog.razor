@using System.Net.Http.Json
@using System.Net.Http.Headers
@inject HttpClient httpClient
@inject ISessionStorageService sessionStorage

<MudDialog Options="_dialogOptions">
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.Edit" Class="mr-3" /> Calificar comentario
        </MudText>
    </TitleContent>
    <DialogContent>
        <p>De @Usuario</p>
        <MudRating @bind-SelectedValue="_rating" Class="mt-3" @onclick="@(()=> AplicarRating())" />
    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="Cerrar" Class="px-10">Close</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; }

    [Parameter] public int CodigoComentario { get; set; }
    [Parameter] public string Usuario { get; set; }

    private bool _visible;
    private int _rating;
    private readonly DialogOptions _dialogOptions = new() { FullWidth = true };

    private void Cerrar() => MudDialog.Close();

    private async Task AplicarRating() 
    { 
        try
        {
            //LLAMAR ENDPOINT APLICARRATING
            var user = await sessionStorage.GetItemAsync<LoginTokenResponse>("user");
            httpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", user.Token);
            var result = await httpClient.PostAsJsonAsync<CalificarComentarioRequest>($"Foro/CalificarComentario", new CalificarComentarioRequest { Comentario_ID = CodigoComentario, Puntaje = _rating, User_ID=string.Empty });
            MudDialog.Close();
        }
        catch (Exception)
        {
            
        }
    }
}